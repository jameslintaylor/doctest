(ns jameslintaylor.doctest.format-test
  (:require
   [clojure.test :refer [deftest is]]
   [jameslintaylor.doctest.format :as format]))

(deftest assertion-form-test
  (is (= `(is (= :foo :bar))
         (format/assertion-form {:expr     :bar
                                 :expected :foo})))
  (is (= `(is (= :foo :bar) "foobar")
         (format/assertion-form {:expr     :bar
                                 :expected :foo
                                 :msg      "foobar"}))))

(defn foo
  "I don't do a whole lot.

  Usage:

  => (foo 1)
  :foo

  foo always returns :foo
  => (foo nil)
  :foo

  => (= (foo 1) (foo 2))
  true"
  [_]
  :foo)

(deftest var-test-form-test
  (is (= `(deftest ~'foo-test
            (is (= :foo (foo 1)))
            (is (= :foo (foo nil))
                "foo always returns :foo")
            (is (= true (= (foo 1) (foo 2)))))
         (format/var-test-form #'foo))))

(deftest ns-form-test
  (is (= `(~'ns ~'foo-test
           "Generated by doctest."
           (:require clojure.test ~'foo))
         (format/ns-form (create-ns 'foo)))))

(deftest form-str-test
  (is (= "(foo bar\n     baz\n     qux)"
         (format/form-str '(foo bar baz qux)))
      "Third and subsequent forms are on new lines and indented")
  (is (= "(foo bar\n     (foo bar\n          baz))"
         (format/form-str '(foo bar (foo bar baz))))
      "Nested forms are treated"))
